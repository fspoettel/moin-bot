// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum StatusCheckType {
  HTTP
  // DNS
  // SSL
  // DISCORD_BOT
}

model StatusCheck {
  createdAt DateTime          @default(now())
  configId  String
  id        String            @id @default(cuid())
  config    StatusCheckConfig @relation(fields: [configId], references: [id])
  label     String            @unique
  results   Result[]
  incidents Incident[]
}

model StatusCheckConfig {
  createdAt         DateTime        @default(now())
  // @TODO: use explicit configurations such as `HttpCheckConfig` istd. of generic JSON.
  // prisma needs to support UNION types for this, see:
  //  * https://git.io/JOJK5
  //  * https://git.io/JOJKh
  details           Json
  id                String          @id @default(cuid())
  // time between checks, in seconds
  interval          Int?            @default(60)
  // the number of consecutive failures until a notification is sent
  incidentThreshold Int?            @default(1)
  type              StatusCheckType
  check             StatusCheck?
}

enum ResultStatus {
  DOWN
  UP
}

model Result {
  statusCheckId String
  createdAt     DateTime     @default(now())
  details       Json
  id            String       @id @default(cuid())
  incidentId    String?
  rtt           Int?
  status        ResultStatus
  incident      Incident?    @relation(fields: [incidentId], references: [id])
  statusCheck   StatusCheck  @relation(fields: [statusCheckId], references: [id])
}

enum IncidentStatus {
  UNCONFIRMED
  CONFIRMED
  RESOLVED
}

model Incident {
  createdAt     DateTime       @default(now())
  resolvedAt    DateTime?
  id            String         @id @default(cuid())
  results       Result[]
  status        IncidentStatus @default(UNCONFIRMED)
  statusCheckId String
  statusCheck   StatusCheck    @relation(fields: [statusCheckId], references: [id])
}
